<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/web/js/form.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/web/js/form.js" />
              <option name="originalContent" value="const data = {&#10;    &quot;BsCS-4C&quot;: {&#10;        &quot;Automota Theory&quot;: &quot;Dr. Shezad Latif&quot;,&#10;        &quot;Database Management Systems&quot;: &quot;Qanetah Ahmed&quot;&#10;    }&#10;};&#10;&#10;const classSelect = document.getElementById(&quot;class&quot;);&#10;const courseSelect = document.getElementById(&quot;course&quot;);&#10;const instructorSelect = document.getElementById(&quot;instructor&quot;);&#10;&#10;function safeGetElement(el, name) {&#10;    if (!el) {&#10;        throw new Error(`Element with id &quot;${name}&quot; not found in DOM`);&#10;    }&#10;    return el;&#10;}&#10;&#10;function safeGetClass(cls) {&#10;    if (!(cls in data)) {&#10;        throw new Error(`Invalid class selected: &quot;${cls}&quot;`);&#10;    }&#10;    return data[cls];&#10;}&#10;&#10;function safeGetCourse(cls, course) {&#10;    const courses = safeGetClass(cls);&#10;    if (!(course in courses)) {&#10;        throw new Error(`Invalid course &quot;${course}&quot; for class &quot;${cls}&quot;`);&#10;    }&#10;    return courses[course];&#10;}&#10;&#10;(function init() {&#10;    try {&#10;        // Set default date to today&#10;        const dateInput = document.getElementById(&quot;date&quot;);&#10;        if (dateInput) {&#10;            const today = new Date();&#10;            const yyyy = today.getFullYear();&#10;            const mm = String(today.getMonth() + 1).padStart(2, '0');&#10;            const dd = String(today.getDate()).padStart(2, '0');&#10;            dateInput.value = `${yyyy}-${mm}-${dd}`;&#10;        }&#10;&#10;        const cSelect = safeGetElement(classSelect, &quot;class&quot;);&#10;        const crsSelect = safeGetElement(courseSelect, &quot;course&quot;);&#10;        const instSelect = safeGetElement(instructorSelect, &quot;instructor&quot;);&#10;&#10;        Object.keys(data).forEach(cls =&gt; {&#10;            let option = document.createElement(&quot;option&quot;);&#10;            option.value = cls;&#10;            option.textContent = cls;&#10;            cSelect.appendChild(option);&#10;        });&#10;&#10;        cSelect.addEventListener(&quot;change&quot;, () =&gt; {&#10;            try {&#10;                crsSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Select course&lt;/option&gt;';&#10;                instSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Select instructor&lt;/option&gt;';&#10;&#10;                if (cSelect.value) {&#10;                    const courses = safeGetClass(cSelect.value);&#10;                    Object.keys(courses).forEach(course =&gt; {&#10;                        let option = document.createElement(&quot;option&quot;);&#10;                        option.value = course;&#10;                        option.textContent = course;&#10;                        crsSelect.appendChild(option);&#10;                    });&#10;                }&#10;            } catch (err) {&#10;                console.error(err.message);&#10;            }&#10;        });&#10;&#10;        crsSelect.addEventListener(&quot;change&quot;, () =&gt; {&#10;            try {&#10;                instSelect.value = &quot;&quot;;&#10;                if (cSelect.value &amp;&amp; crsSelect.value) {&#10;                    instSelect.value = safeGetCourse(cSelect.value, crsSelect.value);&#10;                }&#10;            } catch (err) {&#10;                console.error(err.message);&#10;            }&#10;        });&#10;&#10;    } catch (err) {&#10;        console.error(err.message);&#10;    }&#10;})();&#10;" />
              <option name="updatedContent" value="const data = {&#10;    &quot;BsCS-4C&quot;: {&#10;        &quot;Automota Theory&quot;: &quot;Dr. Shezad Latif&quot;,&#10;        &quot;Database Management Systems&quot;: &quot;Qanetah Ahmed&quot;&#10;    }&#10;};&#10;&#10;const classSelect = document.getElementById(&quot;class&quot;);&#10;const courseSelect = document.getElementById(&quot;course&quot;);&#10;const instructorSelect = document.getElementById(&quot;instructor&quot;);&#10;&#10;function safeGetElement(el, name) {&#10;    if (!el) {&#10;        throw new Error(`Element with id &quot;${name}&quot; not found in DOM`);&#10;    }&#10;    return el;&#10;}&#10;&#10;function safeGetClass(cls) {&#10;    if (!(cls in data)) {&#10;        throw new Error(`Invalid class selected: &quot;${cls}&quot;`);&#10;    }&#10;    return data[cls];&#10;}&#10;&#10;function safeGetCourse(cls, course) {&#10;    const courses = safeGetClass(cls);&#10;    if (!(course in courses)) {&#10;        throw new Error(`Invalid course &quot;${course}&quot; for class &quot;${cls}&quot;`);&#10;    }&#10;    return courses[course];&#10;}&#10;&#10;(function init() {&#10;    try {&#10;        // Set default date to today&#10;        const dateInput = document.getElementById(&quot;date&quot;);&#10;        if (dateInput) {&#10;            const today = new Date();&#10;            const yyyy = today.getFullYear();&#10;            const mm = String(today.getMonth() + 1).padStart(2, '0');&#10;            const dd = String(today.getDate()).padStart(2, '0');&#10;            dateInput.value = `${yyyy}-${mm}-${dd}`;&#10;        }&#10;&#10;        const cSelect = safeGetElement(classSelect, &quot;class&quot;);&#10;        const crsSelect = safeGetElement(courseSelect, &quot;course&quot;);&#10;        const instSelect = safeGetElement(instructorSelect, &quot;instructor&quot;);&#10;&#10;        Object.keys(data).forEach(cls =&gt; {&#10;            let option = document.createElement(&quot;option&quot;);&#10;            option.value = cls;&#10;            option.textContent = cls;&#10;            cSelect.appendChild(option);&#10;        });&#10;&#10;        cSelect.addEventListener(&quot;change&quot;, () =&gt; {&#10;            try {&#10;                crsSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Select course&lt;/option&gt;';&#10;                instSelect.innerHTML = '&lt;option value=&quot;&quot;&gt;Select instructor&lt;/option&gt;';&#10;&#10;                if (cSelect.value) {&#10;                    const courses = safeGetClass(cSelect.value);&#10;                    Object.keys(courses).forEach(course =&gt; {&#10;                        let option = document.createElement(&quot;option&quot;);&#10;                        option.value = course;&#10;                        option.textContent = course;&#10;                        crsSelect.appendChild(option);&#10;                    });&#10;                }&#10;            } catch (err) {&#10;                console.error(err.message);&#10;            }&#10;        });&#10;&#10;        crsSelect.addEventListener(&quot;change&quot;, () =&gt; {&#10;            try {&#10;                instSelect.value = &quot;&quot;;&#10;                if (cSelect.value &amp;&amp; crsSelect.value) {&#10;                    instSelect.value = safeGetCourse(cSelect.value, crsSelect.value);&#10;                }&#10;            } catch (err) {&#10;                console.error(err.message);&#10;            }&#10;        });&#10;&#10;    } catch (err) {&#10;        console.error(err.message);&#10;    }&#10;})();" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>